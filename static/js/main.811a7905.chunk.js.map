{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","updateScore","id","alt","name","src","image","Wrapper","children","Title","class","score","highScore","shuffle","require","guessedArray","App","state","friends","_this","i","length","alert","setState","push","_this2","this","components_Wrapper","components_Title","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"ogFAgBeA,MAbf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAClEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCsB1BC,MAvBf,SAAed,GACb,OAEEC,EAAAC,EAAAC,cAAA,OAAKY,MAAM,4BAA6BR,GAAG,eAC7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,gDAGAF,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UACRN,EAAAC,EAAAC,cAAA,2BAAmBH,EAAMgB,OACzBf,EAAAC,EAAAC,cAAA,wBAAgBH,EAAMiB,qBCTtBC,EAAUC,EAAQ,IAElBC,EAAe,GACfJ,EAAQ,EACRC,EAAY,EAgFDI,6MAvEbC,MAAQ,CACNC,aAKFjB,YAAc,SAAAC,GAKZ,IAFA,IAAMgB,EAAUC,EAAKF,MAAMC,QAElBE,EAAE,EAAEA,EAAEL,EAAaM,OAAOD,IAEjC,GAAIlB,GAAMa,EAAaK,GAgBrB,OAZIT,EAAQC,IAEVA,EAAYD,GAMdI,EAAe,GAEfO,MAAM,kCAAoCV,GAC1CD,EAAQ,EACDQ,EAAKI,SAAS,CAAEL,YAW3B,OALAH,EAAaS,KAAKtB,GAElBS,EAAQI,EAAaM,OAGdF,EAAKI,SAAS,CAAEL,qFAIhB,IAAAO,EAAAC,KAGP,OACE9B,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEjB,MAAOA,EACPC,UAAWA,GAFb,gBAKCC,EAAQa,KAAKT,MAAMC,SAASW,IAAI,SAAAC,GAAM,OACrClC,EAAAC,EAAAC,cAACiC,EAAD,CACE9B,YAAawB,EAAKxB,YAClBC,GAAI4B,EAAO5B,GACX8B,IAAKF,EAAO5B,GACZI,MAAOwB,EAAOxB,kBA7DR2B,mBCZlBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.811a7905.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card remove\" onClick={() => props.updateScore(props.id)}>\n      <div className=\"img-container\"  >\n        <img alt={props.name} src={props.image} />\n      </div>\n\n     \n     \n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    \n    <div class=\"jumbotron jumbotron-fluid\"  id=\"title-block\">\n  <div className=\"container\">\n    <h2>Clicky Game</h2>      \n    <p>Click one of the images below to start</p>\n    <p>Don't click the same picture twice</p>\n  </div>\n\n    <div id=\"scores\">\n    <p>Current Score: {props.score}</p>\n    <p>High Score: {props.highScore}</p>\n\n    </div>\n\n\n</div>\n\n\n);\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nvar shuffle = require('shuffle-array');\n\nvar guessedArray = [];\nvar score = 0;\nvar highScore = 0;\n\n \n// shuffle(collection);\n \n// console.log(collection); // returns [4, 3, 1, 5, 2]\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n\n  \n  updateScore = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    //const friends = this.state.friends.filter(friend => friend.id !== id);\n    const friends = this.state.friends;\n\n    for (var i=0;i<guessedArray.length;i++){\n\n      if (id == guessedArray[i])\n      { \n        //Set highscore\n\n        if (score > highScore){\n\n          highScore = score;\n\n        }\n\n        //Clear the array\n\n        guessedArray = [];\n\n        alert(\"You lost :(, the high score is \" + highScore);\n        score = 0;\n        return this.setState({ friends });\n      }\n\n    }\n\n    \n    guessedArray.push(id);\n    \n    score = guessedArray.length;\n    \n    // Set this.state.friends equal to the new friends array\n    return this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n\n    \n    return (\n      <Wrapper>\n        <Title\n          score={score}\n          highScore={highScore}\n        >Clicky Game!</Title>\n       \n        {shuffle(this.state.friends).map(friend => (\n          <FriendCard \n            updateScore={this.updateScore}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            \n            >\n            </FriendCard>\n        ))}\n      </Wrapper>\n    );\n  }\n\n \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}